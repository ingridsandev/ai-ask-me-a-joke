name: Build and Deploy to ECR and Terraform

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.0.0

      - name: Set up Python
        uses: actions/setup-python@v4.0.0
        with:
          python-version: '3.9'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip --no-cache-dir
          pip install -r requirements.txt --no-cache-dir
          pip install pytest --no-cache-dir

      - name: Run tests
        run: pytest src/test_main.py

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t ai-ask-me-a-joke .

      - name: Tag Docker Image
        run: |
            docker tag ai-ask-me-a-joke:latest ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/ai-ask-me-a-joke:latest

      - name: Create ECR Repository if not exists
        run: |
          aws ecr describe-repositories --repository-names ai-ask-me-a-joke --region us-west-2 2>/dev/null || \
          aws ecr create-repository --repository-name ai-ask-me-a-joke --region us-west-2

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-2.amazonaws.com/ai-ask-me-a-joke:latest

      - name: Terraform Init
        working-directory: terraform 
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}  
        run: terraform apply -auto-approve